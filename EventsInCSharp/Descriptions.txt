//Harish Sune
//harishsune@hotmail.com
//22th March 2015

Events are basically a user action like key press, clicks, mouse movements, etc., or some occurrence like system generated 
notifications. Applications need to respond to events when they occur. For example, interrupts. Events are used for inter-
process communication.

Using Delegates with Events
The events are declared and raised in a class and associated with the event handlers using delegates within the same class or
 some other class. The class containing the event is used to publish the event. This is called the publisher class. Some other
  class that accepts this event is called the subscriber class. Events use the publisher-subscriber model.

A publisher is an object that contains the definition of the event and the delegate. The event-delegate association is also 
defined in this object. A publisher class object invokes the event and it is notified to other objects.

A subscriber is an object that accepts the event and provides an event handler. The delegate in the publisher class invokes 
the method (event handler) of the subscriber class.

Declaring Events
To declare an event inside a class, first a delegate type for the event must be declared. For example,

public delegate void BoilerLogHandler(string status);

Next, the event itself is declared, using the event keyword:

//Defining event based on the above delegate

public event BoilerLogHandler BoilerEventLog;

The preceding code defines a delegate named BoilerLogHandler and an event named BoilerEventLog, which invokes the delegate 
when it is raised.